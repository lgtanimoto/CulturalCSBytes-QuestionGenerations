{
    "MQCode": "2A08",
    "learning_objective": "Compare and refine multiple algorithms for the same task and determine which is the most appropriate.",
    "interest_area": "Science and Engineering",
    "topic": "Earth, moon, sun, and seasons",
    "coding": true,
    "question_str": "{\n    \"Question\": \"Alex has been tasked with simulating the position of Earth relative to the Sun based on the day of the year, to demonstrate the formation of different seasons. They have come up with two different algorithms, Algorithm A and B. Alex runs both of these algorithms with the same input data but realizes that Algorithm B runs considerably slower than Algorithm A. Which one of the following strategies could Alex adopt to refine Algorithm B and improve its speed?\",\n    \"Answer1\": \"Use nested loops to iterate through the position of Earth for each day\",\n    \"Answer2\": \"Store the final positions of Earth after each day in a data structure and update it after every run\",\n    \"Answer3\": \"Avoid branching in the code by removing unncessary conditional statements\",\n    \"Answer4\": \"All of the above\",\n    \"CorrectAnswer\": \"4\",\n    \"Explanation\": \"Nested loops increase computational time, storing computed results reduces redundant computation and can be quickly retrieved, avoiding branching speeds up the execution of the program as it allows the processor to efficiently schedule instructions. Hence, Alex could adopt all of these strategies to refine their algorithm.\",\n    \"code_snippet\": \"integer earthXPosition = 0\\ninteger earthYPosition = 0\\ninteger i = 0\\noutput \\\"Algorithm B: Simulation of Earth\u2019s position relative to the Sun\\\"\\n\\nwhile i <= 365\\n    earthXPosition = earthXPosition + sin(i * (pi/180))\\n    earthYPosition = earthYPosition + cos(i * (pi/180))\\n    \\n    repeat\\n       output \\\"Day \\\" + i + \\\": ( \\\" + earthXPosition + \\\", \\\" + earthYPosition + \\\" )\\\"\\n       i = i +1\\n    until i > 365 or (earthXPosition = 0 and earthYPosition = 0)\\nend\"\n}"
}