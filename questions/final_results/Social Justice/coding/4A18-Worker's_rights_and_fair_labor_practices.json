{
    "MQCode": "4A18",
    "learning_objective": "Create artifacts by using procedures within a program, combinations of data and procedures, or independent but interrelated programs.",
    "interest_area": "Social Justice",
    "topic": "Worker's rights and fair labor practices",
    "coding": true,
    "question_str": "{\n    \"Question\": \"Alex is working on a program that calculates overtime pay for workers. This program assumes that a worker gets paid one and a half times (1.5x) their regular pay rate for any hours worked over 40 in a week. However, Alex found that his program occasionally reports incorrect overtime pay. Here is the code snippet he's been working on: What is the most likely cause of the incorrect overtime pay calculation?\",\n    \"Answer1\": \"The '_hoursWorked' variable is less than 40 hours.\",\n    \"Answer2\": \"_calcOvertime() function fails when 'hoursWorkedInWeek' exceeds 40.\",\n    \"Answer3\": \"_calcRegularPay() function needs to account for overtime hours.\",\n    \"Answer4\": \"The '_hourlyRate' variable is not properly set.\",\n    \"CorrectAnswer\": \"2\",\n    \"Explanation\": \"The _calcOvertime() function is supposed to handle the calculation of overtime pay. However, the function fails to calculate this correctly when 'hoursWorkedInWeek' exceeds 40. The function needs to account for the overtime hours (hours worked beyond 40) and apply the 1.5x rate for the equivalent pay.\",\n    \"code_snippet\": \"class Worker\\n    number _hourlyRate\\n    integer _hoursWorked\\n    action SetHourlyRate(number rate)\\n        _hourlyRate = rate\\n    end\\n    action SetHoursWorked(integer hours)\\n        _hoursWorked = hours\\n    end\\n    action OutputPay()\\n        output _calcRegularPay() + _calcOvertime()\\n    end\\n    action _calcRegularPay() returns number\\n        return _hoursWorked * _hourlyRate\\n    end\\n    action _calcOvertime() returns number\\n        integer overtimeHours = 0\\n        if _hoursWorked > 40\\n            overtimeHours = _hoursWorked - 40\\n        end\\n        return overtimeHours * _hourlyRate\\n    end\\nend\"\n}"
}