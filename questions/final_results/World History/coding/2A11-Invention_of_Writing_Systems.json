{
    "MQCode": "2A11",
    "learning_objective": "Decompose (break down) problems into smaller, manageable subproblems to facilitate the program development process.",
    "interest_area": "World History",
    "topic": "Invention of Writing Systems",
    "coding": true,
    "question_str": "{\n    \"Question\": \"Alex is tasked with creating a 'Hangman' game where each word is related to early writing systems (like hieroglyphs, cuneiform, and pictographs). Remembering the learning objective, Alex decides to break down the problem into smaller subproblems. Which of the following sequences shows a logical sequence of subproblems?\",\n    \"Answer1\": \"List of early writing systems -> Display the hidden word as underscores -> Compare player input to the correct word -> Display correct guesses and update hidden word\",\n    \"Answer2\": \"Start game -> Win game -> Lose game\",\n    \"Answer3\": \"Programming syntax analysis -> Input optimization -> Output formatting\",\n    \"Answer4\": \"Develop UI design -> Establish Back-end server\",\n    \"CorrectAnswer\": \"1\",\n    \"Explanation\": \"By first identifying and breaking the problem down into the main features, then proceeding to the details of each feature, Alex is decomposing the problem into manageable subproblems. This would allow them to tackle each smaller problem one by one, gradually building up towards a solution to the main problem.\",\n    \"code_snippet\": \"class Hangman\\n\\n    text word = 'cuneiform'\\n    list<text> guessed_word\\n\\n    action SetUp()\\n        repeat with i from 1 to length(word)\\n            guessed_word:Add('_')\\n        end\\n    end\\n\\n    action Guess(text letter)\\n       // Add more code here to implement the guess feature\\n    end\\n\\nend\"\n}"
}