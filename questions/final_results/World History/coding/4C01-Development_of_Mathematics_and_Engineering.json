{
    "MQCode": "4C01",
    "learning_objective": "Explain how abstractions hide the underlying implementation details of computing systems embedded in everyday objects.",
    "interest_area": "World History",
    "topic": "Development of Mathematics and Engineering",
    "coding": true,
    "question_str": "{\n    \"Question\": \"Alex is exploring the connection between computer science and engineering. The prompt asks them to describe how abstractions might be used within a robotic arm used for precise industrial tasks. Which of the following statements would be the best response?\",\n    \"Answer1\": \"The robotic arm circles three times before striking\",\n    \"Answer2\": \"The abstraction can be the robotic arm designed to recognize a specific sign made from the operators which then prompts it to perform a certain task\",\n    \"Answer3\": \"The robotic arm is designed in a very attractive way\",\n    \"Answer4\": \"The robotic arm communicates in English language\",\n    \"CorrectAnswer\": \"2\",\n    \"Explanation\": \"In this case, the abstraction is the feature that allows the robotic arm to recognize certain commands or signals (signs made by the operators), hiding the complex algorithms and processes that allow it to do so. It's like a high-level control panel for the underlying programming and mechanics.\",\n    \"code_snippet\": \"class RoboticArm is\\n    action DoTask(text command) is\\n        if command = \\\"grab\\\"\\n            output \\\"Robotic arm is grabbing the desired component\\\"\\n            // Add the underlying code to perform the action here\\n        elseif command = \\\"rotate\\\"\\n            output \\\"Robotic arm is rotating\\\"\\n            // Add the underlying code to perform the action here\\n        else\\n            output \\\"Invalid command\\\"\\n        end\\n    end\\nend\"\n}"
}