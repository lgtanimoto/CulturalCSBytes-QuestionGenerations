{
    "MQCode": "2C02",
    "learning_objective": "Model how computer hardware and software work together as a system to accomplish tasks.",
    "interest_area": "(Video) Gaming",
    "topic": "Game Sound Design",
    "coding": true,
    "question_str": "{\n    \"Question\": \"Alex is working on a computer game and they have created a class SoundSystem to handle all the sounds in the game. The useSoundSystem procedure defines an instance of the class and calls two methods on it, loadSounds() and playSounds(). At a high-level, what is Alex's code modelling about how a computer game handles sounds?\",\n    \"Answer1\": \"The code is modelling that all sounds are loaded and then immediately played when a computer game starts.\",\n    \"Answer2\": \"The code is modelling the storage of sound files and the ability to initiate sound playback in a computer game.\",\n    \"Answer3\": \"The code is modelling the volume control and sound options menu in a computer game.\",\n    \"Answer4\": \"The code is modelling how sounds are recorded for a computer game.\",\n    \"CorrectAnswer\": \"2\",\n    \"Explanation\": \"Alex's sound system class models two primary tasks - loading the sound files (loadSounds) into the game system and controlling when they are played (playSounds). This mirrors how real computer games handle sound: they have files for different sounds, which are loaded into the game, and then the game software controls when each of these sounds is played.\",\n    \"code_snippet\": \"class SoundSystem\\n    action loadSounds()\\n        output \\\"loading sounds\\\"\\n    end\\n    action playSounds()\\n        output \\\"playing sounds\\\"\\n    end\\nend\\n\\naction useSoundSystem()\\n    SoundSystem mySounds\\n    mySounds:loadSounds()\\n    mySounds:playSounds()\\nend\"\n}"
}