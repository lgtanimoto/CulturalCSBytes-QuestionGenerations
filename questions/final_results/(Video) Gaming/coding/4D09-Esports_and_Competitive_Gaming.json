{
    "MQCode": "4D09",
    "learning_objective": "Translate between different bit representations of real-world phenomena, such as characters, numbers, and images.",
    "interest_area": "(Video) Gaming",
    "topic": "Esports and Competitive Gaming",
    "coding": true,
    "question_str": "{\n    \"Question\": \"Alex is developing a new esports game. Their game requires the storage of player information including the player's in-game level, which is always between 0 and 255. Alex decides to store this information using a single byte, with each level represented by a unique binary bit sequence. How should Alex explain this structure to their teammates during a code review?\",\n    \"Answer1\": \"Each player's level is represented by a section of code eight digits long, where each digit can be either 1 or 0.\",\n    \"Answer2\": \"Each player's level is represented by a string of eight characters, ranging from 0 to 8.\",\n    \"Answer3\": \"Each player's level is represented by a sequence of runes.\",\n    \"Answer4\": \"Each player's level is represented by floating point numbers.\",\n    \"CorrectAnswer\": \"1\",\n    \"Explanation\": \"A byte consists of 8 bits, and each bit can be either 0 or 1, representing a binary digit. Thus, since player levels are always between 0 and 255, they can be perfectly represented using a single byte in binary format.\",\n    \"code_snippet\": \"use Libraries.Containers.Array\\nuse Libraries.Game.Game\\n\\nclass Main is Game\\n    Player player\\n    action StartGame()\\n        player:level = 10\\n    end\\n\\n    action Main\\n        StartGame()\\n    end\\nend\\n\\nclass Player\\n    integer level\\n    byte level_representation = level:ToByte()\\n    action LevelUp()\\n        level = level + 1\\n        level_representation = level:ToByte()\\n    end\\nend\"\n}"
}