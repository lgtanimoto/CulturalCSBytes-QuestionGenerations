{
    "learning_objective": "Develop guidelines that convey systematic troubleshooting strategies that others can use to identify and fix errors.",
    "topic": "Cultural Competence",
    "MQCode": "4C03",
    "question_str": "{\n    \"Question\": \"Jasmine is writing a program that will translate phrases to different languages. For now, her program only supports translation to Spanish and Japanese. She has this function ready but often finds errors happening when a language other than 'spanish' or 'japanese' is inputted. Jasmine is considering making a documentation to help troubleshoot this issue. What guide should Jasmine make for others to identify and fix errors?\",\n    \"Answer1\": \"Document the error messages that occur when an unsupported language is used and provide guidelines on how to modify the code to support more languages.\",\n    \"Answer2\": \"Advise users to restart their computer if they encounter an error.\",\n    \"Answer3\": \"Recommend users to re-write the entire program if errors occur.\",\n    \"Answer4\": \"Advise users to ignore the error messages and continue using the program.\",\n    \"CorrectAnswer\": \"1\",\n    \"Explanation\": \"When an unsupported language is inputted, it would be beneficial to document the error messages that occur and provide guidelines on how to modify the code to support more languages. This would help others identify the issue and know how to fix it. The other options either don't solve the problem or they are impractical.\",\n    \"code_snippet\": \"action translate(string phrase, string language)\\n    if language = \\\"spanish\\\"\\n        // code for Spanish translation\\n    elseif language = \\\"japanese\\\"\\n        // code for Japanese translation\\n    else\\n        output \\\"Language not supported.\\\"\\n    end\\nend\"\n}",
    "interest_area": "Diversity and inclusion",
    "coding": true
}